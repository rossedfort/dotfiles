#!/usr/bin/env bash

PROMPT_COMMAND=prompt

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM='xterm-256color';
fi;

reset="\e[0m";

white="\e[97";
fg_default="\e[39m";
fg_black="\e[30m";
fg_red="\e[31m";
fg_green="\e[32m";
fg_yellow="\e[33m";
fg_blue="\e[34m";
fg_magenta="\e[35m";
fg_cyan="\e[36m";
fg_gray="\e[90m";
fg_light_gray="\e[37m";
fg_light_red="\e[91m";
fg_light_green="\e[92m";
fg_light_yellow="\e[93m";
fg_light_blue="\e[94m";
fg_light_magenta="\e[95m";
fg_light_cyan="\e[96m";

bg_default="\e[49m";
bg_black="\e[40m";
bg_red="\e[41m";
bg_green="\e[42m";
bg_yellow="\e[43m";
bg_blue="\e[44m";
bg_magenta="\e[45m";
bg_cyan="\e[46m";
bg_gray="\e[100m";
bg_light_gray="\e[47m";
bg_light_red="\e[101m";
bg_light_green="\e[102m";
bg_light_yellow="\e[103m";
bg_light_blue="\e[104m";
bg_light_magenta="\e[105m";
bg_light_cyan="\e[106m";

function prompt() {
  local EXIT="$?"
  if [ $EXIT -eq 0 ]; then
    exit="${fg_light_green}✔︎${reset}";
  else
    exit="${fg_light_red}✘${reset}";
  fi

  me="${fg_light_blue}\u${reset}";
  dir="${fg_light_green}\w${reset}";

  PS1="${me} in ${dir}$(git_branch) ${exit}\n";
  # printf "%${COLUMNS}s\n" "$(node_v) $(ruby_v) $(tsc_v)"
  export PS1

  PS2="${fg_cyan}→${reset}"
  export PS2
}

function node_v() {
  if [ -d "./node_modules" ]; then
    echo "node:$(node -v)"
  fi
}

function ruby_v() {
  if [ -f ".ruby-version" ]; then
    # regexp='[a-z]+ [0-9]\.[0-9]\.[0-9a-zA-Z]+'
    # ruby_v=$(ruby -v)
    # echo $ruby_v | sed $regexp
    # echo " ${purple}|ruby:$v|${reset}"
    # echo "ruby:$(ruby -v | sed 's/\[a-z]+ \[0-9]\.\[0-9]\.\[0-9a-zA-Z]+/g')"
    echo ""
  fi
}

function tsc_v() {
  if [ -f "./node_modules/.bin/tsc" ]; then
    echo "typescript:$(./node_modules/.bin/tsc -v | sed 's/Version //g')"
  fi
}

function git_branch() {
  [ -x "$(which git)" ] || return

  local git_eng="env LANG=C git"
  local branch="$($git_eng symbolic-ref --short HEAD 2>/dev/null || $git_eng describe --tags --always 2>/dev/null)"
  [ -n "$branch" ] || return

  echo -e " ${fg_yellow}(${branch})${reset}";
}
